{"name":"Coreos-osx-gui","tagline":"CoreOS-Vagrant GUI for OS X","body":"CoreOS-Vagrant GUI for OS X\r\n============================\r\n\r\nCoreOS-Vagrant GUI for Mac OS X is a Mac Status bar App which works like a wrapper around the [coreos-vagrant](https://github.com/coreos/coreos-vagrant) command line tool. It supports only a standalone CoreOS VM, cluster one is at [CoreOS-Vagrant Cluster GUI](https://github.com/rimusz/coreos-osx-gui-cluster).\r\n\r\nNote: Alpha and beta channel use etcd2, stable is still on etcd 0.4.\r\n\r\n[CoreOS](https://coreos.com) is a Linux distribution made specifically to run [Docker](https://www.docker.io/) containers.\r\n[CoreOS-Vagrant](https://github.com/coreos/coreos-vagrant) is made to run on VirtualBox and VMWare VMs.\r\n\r\n![CoreOS-Vagrant-GUI L](coreos-vagrant-gui.png \"CoreOS-Vagrant-GUI\")\r\n\r\nDownload\r\n--------\r\nHead over to the [Releases Page](https://github.com/rimusz/coreos-osx-gui/releases) to grab the latest release.\r\n\r\n\r\nHow to install\r\n----------\r\n\r\nRequired software\r\n* [VirtualBox for Mac OS X hosts](https://www.virtualbox.org/wiki/Downloads), [Vagrant for Mac OS X](http://www.vagrantup.com/downloads.html) and [iTerm 2](http://www.iterm2.com/#/section/downloads)\r\n* Download `CoreOS Vagrant OSX GUI latest.dmg` from the [Releases Page](https://github.com/rimusz/coreos-osx-gui/releases) and open it and drag the App e.g to your Desktop.\r\n* Start the `CoreOS Vagrant OSX GUI` and from menu `Setup` choose `Initial setup of CoreOS-Vagrant` \r\n* The install will do the following:\r\n\r\n````\r\n1) All dependent files/folders will be put under \"coreos-osx\" folder in the user's home \r\n folder e.g /Users/someuser/coreos-osx\r\n2) Will clone latest coreos-vagrant from git\r\n3) user-data file will have fleet, etcd, and Docker Socket for the API enabled\r\n4) Will download latest vagrant VBox and run \"vagrant up\" to initialise VM with docker 2375 port pre-set for docker OS X client\r\n5) Will set VM to static IP '172.19.8.99' \r\n6) Will download and install fleet, etcd and docker OS X clients to ~/coreos-osx/bin/\r\n7) A small shell script \"rkt\" will be installed to ~/coreos-osx/bin/ which allows to call\r\n remote rkt binary on CoreOS VM with e.g rkt help\r\n8) docker-exec script (docker exec -it $1 bash -c 'export TERM=xterm && bash') is installed \r\n into ~/coreos-osx/bin/ too, which allows to enter container with just a simple command:\r\n docker-exec container_name \r\n9) Will upload any saved docker images from ~/coreos-osx/docker_images folder\r\n10) Will install DockerUI and Fleet-UI via fleet unit files from ~/coreos-osx/fleet folder.\r\n11) Via IP 172.19.8.99 you can access any port on CoreOS VM, no needs to put any port forwards \r\n to Vagrantfile.\r\n12) user-data file enables docker flag `--insecure-registry` to access insecure registries.\r\n````\r\n\r\nHow it works\r\n------------\r\n\r\nJust start `CoreOS Vagrant OSX GUI` application and you will find a small icon with the CoreOS logo in the Status Bar.\r\nFor now it only supports a standalone CoreOS VM, cluster support might come at some stage later one.\r\n\r\n* There you can `Up`, `Suspend`, `Halt`, `Reload` (usual vagrant commands) CoreOS vagrant VM\r\n* `SSH to core-01` (vagrant ssh) will open VM shell\r\n* Under `Up` OS Shell will be opened when `vagrant up` finishes and it will have such environment pre-set:\r\n````\r\nDOCKER_HOST=tcp://127.0.0.1:2375\r\nETCDCTL_PEERS=http://172.19.8.99:4001\r\nFLEETCTL_ENDPOINT=http://172.19.8.99:4001\r\nFLEETCTL_DRIVER=etcd\r\nPath to ~/coreos-osx/bin where docker, etcdclt and fleetctl binaries and rkt shell \r\nscript are stored\r\n```` \r\n\r\n* `OS Shell` opens OS Shell with the same enviroment preset as `Up`\r\n* `Upload docker images` will upload docker images from `~/coreos-osx/docker_images`, it saves time from downloading them again from Internet. If you destroy the VM and use `Up`, docker images will be automaticly uploaded to VM again.\r\n* `Updates/Force CoreOS update` will run `sudo update_engine_client -update` on CoreOS VM.\r\n* `Updates/Check for updates` will update docker, etcdclt and fleetctl OS X clients to the same versions as CoreOS VM runs. * [Fleet-UI](http://fleetui.com) dasboard will show running `fleet` units and etc (it might take a bit of a time after install for it to work, as it needs to download it's image)\r\n* [DockerUI](https://github.com/crosbymichael/dockerui) will show all running containers and etc (it might take a bit of a time after install for it to work, as it needs to download it's image)\r\n* Put your fleet units into `~/coreos-osx/my_fleet` and manually start them. If you destroy the VM and use `Up`, your fleet units will be automaticly deployed by `fleetctl`.\r\n* This App has much automation as possible to make easier to destroy VM, change CoreOS release channel and get back to your previous setup in a fresh built VM with your saved docker images and fleet units.\r\n\r\n\r\n\r\nOther links\r\n-----------\r\n* Cluster one CoreOS VM App can be found here [CoreOS-Vagrant Cluster GUI](https://github.com/rimusz/coreos-osx-gui-cluster).\r\n* Kubernetes Cluster one CoreOS VM App can be found here [CoreOS-Vagrant Kubernetes Cluster GUI ](https://github.com/rimusz/coreos-osx-gui-kubernetes-cluster).\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}