{"name":"Coreos-osx","tagline":"CoreOS VM for OS X","body":"CoreOS VM for OS X \r\n========================\r\n\r\n***CoreOS VM for OS X App has a new home, it is now under https://github.com/TheNewNormal organisation***\r\n\r\n**CoreOS VM for OS X** (coreos-machine) is a Mac Status bar App which works like a wrapper around the [corectl](https://github.com/TheNewNormal/corectl) command line tool (it makes easier to control [xhyve](https://github.com/mist64/xhyve) based VMs). \r\n\r\nIt includes [Docker Registry v2](https://github.com/docker/distribution) (Go based and compiled for OS X)\r\n\r\nIt supports only a standalone CoreOS VM, cluster one (Vagrant based) is at [CoreOS Cluster for OS X](https://github.com/rimusz/coreos-osx-cluster).\r\n\r\n**New** v1.1.0 is based on [corectl](https://github.com/TheNewNormal/corectl) which brings more stablity to the App. App got renamed from `CoreOS GUI` to `CoreOS`. Mac user home folder is automaticly mounted to VM.\r\n\r\n\r\n![CoreOS-OSX](coreos-osx-gui.png \"CoreOS-OSX-GUI\")\r\n\r\n\r\nHow to install CoreOS VM for OS X\r\n----------\r\n\r\n**Requirements**\r\n -----------\r\n  - **OS X 10.10.3** Yosemite or later \r\n  - Mac 2010 or later for this to work.\r\n  - If you want to use this App with any other VirtualBox based VM, you need to use newest versions of VirtualBox 4.3.x or 5.0.x.\r\n\r\n\r\n####Download:\r\n* Download `CoreOS OSX latest.dmg` from the [Releases Page](https://github.com/TheNewNormal/coreos-osx/releases)\r\n\r\n###Install:\r\n\r\nOpen downloaded `dmg` file and drag the App e.g. to your Desktop. Start the `CoreOS OSX` and `Initial setup of CoreOS OSX` will run.\r\n\r\n**TL;DR**\r\n\r\n- App's files are installed to `~/coreos-osx` folder\r\n- CoreOS ISO files are stored under `~/.coreos` folder\r\n- Docker registry runs on `192.168.64.1:5000` and images are stored under `~/coreos-osx/registry`\r\n- Mac user home folder is automaticly mounted to VM: `/Users/my_user`:`/Users/my_user`\r\n- OS X `fleetctl` and `docker` clients are installed to `~/coreos-osx/bin` and preset in `OS shell` to be used from there\r\n\r\n**The install will do the following:**\r\n\r\n- All dependent files/folders will be put under `coreos-osx` folder in the user's home folder e.g /Users/someuser/coreos-osx\r\n- Mac user home folder is automaticly mounted to VM: `/Users/my_user` can be accessed on VM via the same `/Users/my_user`, it is very handy for using docker mounted volumes \r\n- User's Mac password will be stored in `OS X Keychain`, it will be used to pass to `sudo` command which needs to be used starting the VM, this allows to avoid using `sudo` for `corectl` to start a VM. \r\n- ISO images are stored under `~/.coreos/images`\r\nThat allows to share the same images between different `corectl` based Apps and also speeds up this App VMs reinstall\r\n- user-data file will have fleet, etcd, and Docker Socket for the API enabled\r\n- Will download latest CoreOS ISO image and run `corectl` to initialise VM with docker 2375 port pre-set for docker OS X client\r\n- Will download and install `fleetctl` and `docker` OS X clients to ~/coreos-osx/bin/\r\n- A small shell script `rkt` will be installed to ~/coreos-osx/bin/ which allows to call via ssh remote `rkt` binary on CoreOS VM\r\n- A small shell script `etcdctl` will be installed to ~/coreos-osx/bin/ which allows to call via ssh remote `etcdctl` binary on CoreOS VM\r\n- `docker-exec` script (docker exec -it $1 bash -c 'export TERM=xterm && bash') will be installed \r\n into ~/coreos-osx/bin/ too, which allows to enter container with just a simple command:\r\n docker-exec container_name \r\n- Also `docker2aci` binary will be installed to ~/coreos-osx/bin/, which allows to convert docker images to `rkt` aci images\r\n- Will install [Fleet-UI](http://fleetui.com) and [DockerUI](https://github.com/crosbymichael/dockerui) via unit files\r\n- Via assigned static IP (it will be shown in first boot and will survive VM's reboots) you can access any port on CoreOS VM\r\n- user-data file enables docker flag `--insecure-registry` to access insecure registries.\r\n- Root persistant disk will be created and mounted to `/` so data will survive VM reboots. \r\n\r\n\r\nHow it works\r\n------------\r\n\r\nJust start `CoreOS OSX GUI ` application and you will find a small icon with the CoreOS logo with `h`in the Status Bar.\r\n\r\n* There you can `Up`, `Halt`, `Reload` CoreOS VM\r\n* `SSH to core-01` (vagrant ssh) will open VM shell\r\n* Under `Up` OS Shell will be opened when VM boot finishes up and it will have such environment pre-set:\r\n\r\n```\r\nDOCKER_HOST=tcp://192.168.64.xxx:2375\r\nETCDCTL_PEERS=http://192.168.64.xxx:2379\r\nFLEETCTL_ENDPOINT=http://192.168.64.xxx:2379\r\nFLEETCTL_DRIVER=etcd\r\n```\r\n```\r\nPath to `~/coreos-osx/bin` where docker and fleetctl binaries, rkt, etcdclt \r\nand docker-exec shell scripts are stored\r\n```\r\n\r\n* `OS Shell` opens OS Shell with the same enviroment preset as `Up`\r\n* `Updates/Check updates for OS X fleetctl and docker clients` will update fleet and docker OS X clients to the same versions as CoreOS VM runs.\r\n* `Updates/Fetch latest CoreOS ISO` will download the lasted CoreOS ISO file for the currently set release channel. \r\n* [Fleet-UI](http://fleetui.com) dashboard will show running `fleet` units and etc\r\n* [DockerUI](https://github.com/crosbymichael/dockerui) will show all running containers and etc\r\n* Put your fleet units into `~/coreos-osx/my_fleet` folder and they will be automaticly started on each VM boot.\r\n* You can upload your saved/exported docker images place in `~/coreos-osx/docker_images` folder via `Upload docker images`\r\n* Local Docker Registry v2 (Go based and compiled for  OS X) is running on `192.168.64.1:5000`, which gets started/stopped on each VM Up/Halt.\r\n* This App has as much automation as possible to make easier to use CoreOS on OS X, e.g. you can change CoreOS release channel and reload VM as `root` persistant disk for VM will be created and mounted to `/` so data will survive VM reboots.\r\n\r\n\r\nCredits\r\n-----------\r\n* To [Ant√≥nio Meireles](https://github.com/AntonioMeireles) for his awesome [corectl](https://github.com/TheNewNormal/corectl) tool to easily control [xhyve](https://github.com/mist64/xhyve)\r\n* To [Michael Steil](https://github.com/mist64) for the awesome [xhyve](https://github.com/mist64/xhyve) lightweight OS X virtualization solution\r\n* To Kelsey Hightower for [Docker Registry OS X Setup Guide](https://github.com/kelseyhightower/docker-registry-osx-setup-guide).\r\n\r\n\r\nOther CoreOS VM based Apps\r\n-----------\r\n* Cluster one CoreOS VM App can be found here [CoreOS Cluster for OSX](https://github.com/rimusz/coreos-osx-cluster).\r\n* Kubernetes Solo Cluster VM App (corectl based) can be found here [Kube Solo](https://github.com/TheNewNormal/kube-solo-osx).\r\n* Kubernetes Cluster one CoreOS VM App can be found here [CoreOS Kubernetes Cluster for OSX ](https://github.com/rimusz/coreos-osx-kubernetes-cluster).\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}